<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-type" content="text/html; charset=utf-8">
  <title>GPS Monitor</title>
        <!-- <script type="text/javascript" src="/jquery-3.5.0.min.js"></script> -->
        <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
		<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBP-sX_MQ4FVCbm2v478-vEcubrio73lS4"></script>
        <script>
		
			var sampleData = [
			 {"valid":true, "exist":true, "lat":37.727, "lng":-96.707, "date":"2020-05-12T19:21:26.000Z", "ang": 182},
			 {"valid":true, "exist":true, "lat":38.971, "lng":-92.713, "date":"2020-05-12T19:21:26.000Z", "ang": 182},
             {"valid":true, "exist":true, "lat":36.172, "lng":-89.415, "date":"2020-05-12T19:21:26.000Z", "ang": 182}
			 ];
			
			
		    var refreshRate = 10000;
            var map = null;
            var mapCenter = {lat: 39.000000, lng: -99.000000};
			var position = {lat: 39.000000, lng: -99.000000};
			var GpsCoordinates = [];
			var GpsCoordinates0 = [];
			var trackPath = null;
			var askedDate = null;
			var infoWindow = null;
			function setMapOnAll(map) {
		          for (var i = 0; i < GpsCoordinates0.length; i++) {
		          GpsCoordinates0[i].setMap(map);
		        }
		      }

			function getUrlVars()
			{
			    var vars = [], hash;
			    var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
			    for(var i = 0; i < hashes.length; i++)
			    {
			        hash = hashes[i].split('=');
			        vars.push(hash[0]);
			        vars[hash[0]] = hash[1];
			    }
			    return vars;
			}
			var qs = getUrlVars();
            function initMap() {
                map = new google.maps.Map(document.getElementById('map'),{
                    zoom: 3,
                    center: mapCenter
                });

              trackPath = new google.maps.Polyline({
                       geodesic: true,
                       strokeColor: '#FF0000',
                       strokeOpacity: 1.0,
                       strokeWeight: 2
               });
                
            }
			
			function getGPSData(){
			    var defer = $.Deferred();
				if(qs.debug){
					defer.resolve(sampleData);
				}else{
				    askedDate = document.getElementById("Date").value;
					$.ajax({
                    url: "/getGpsData?Date=" + askedDate,
                    dataType: "json",
                    data: null
		                }).then(function(data) {
		                  defer.resolve(data);
		                }, function(jqXHR, textStatus, errorThrown) {
		                    console.log("Error Getting Position", textStatus, errorThrown);
		                   defer.reject(jqXHR, textStatus, errorThrown); 
		                })
				}
                return defer.promise();
			}
			
			function centerMapCurrentPosition() {
                console.log("Getting Position");
				if(qs.debug){
					
				}
                getGPSData().then(function(data) {
				if(data.valid == false && data.exist == true){
    
				 setMapOnAll(null);
				 GpsCoordinates0 = [];
				 trackPath.setMap(null);
				 GpsCoordinates = [];
			   	$.each( data, function(index, item){
                    position.lat = item.lat;
					position.lng = item.lng;
					console.log("Got Position", position);
					GpsCoordinates.push({lat: item.lat, lng: item.lng});
					var myTime = $("#time").val();
					if(myTime = ""){
						myTime = 5;
					}
					else{
						myTime = parseInt(myTime);
					}
					if(item.time >= myTime){
					   infoWindow = new google.maps.InfoWindow({
                         position: position,
                         Content: item.time.toString() + " minutes",
						 map: map
                    });
					GpsCoordinates0.push(infoWindow);
					}
              });
			  console.log("coordinates are", GpsCoordinates); 
		      //drawPolyLines();
			  trackPath.setPath(GpsCoordinates);
			  trackPath.setMap(map);
               }else if(data.valid == true && data.exist == false){
			   	 alert("data at" + askedDate + "doesn't exist");
			   }else{
		
				 setMapOnAll(null);
				 GpsCoordinates0 = [];
				 trackPath.setMap(null);
				 GpsCoordinates = [];
			   	$.each( data, function(index, item){
                    position.lat = item.lat;
					position.lng = item.lng;
					console.log("Got Position", position);
					GpsCoordinates.push({lat: item.lat, lng: item.lng});
					var myTime = $("#time").val();
					if(myTime = ""){
						myTime = 5;
					}
					else{
						myTime = parseInt(myTime);
					}
					if(item.time >= myTime){
					   infoWindow = new google.maps.InfoWindow({
                         position: position,
                         Content: item.time.toString() + " minutes",
						 map: map
                    });
					GpsCoordinates0.push(infoWindow);
					}
              });
			  console.log("coordinates are", GpsCoordinates); 
		      //drawPolyLines();
			  trackPath.setPath(GpsCoordinates);
			  trackPath.setMap(map);
			   } //setTimeout(updateMap, refreshRate);
                }, function(jqXHR, textStatus, errorThrown) {
                    console.log("Error Getting GPS Data", textStatus, errorThrown);
                    //setTimeout(updateMap, refreshRate);
                })
            };
			/*function drawPolyLines() {
		       trackPath = new google.maps.Polyline({
                       path: GpsCoordinates,
                       geodesic: true,
                       strokeColor: '#FF0000',
                       strokeOpacity: 1.0,
                       strokeWeight: 2
               });
               trackPath.setMap(map);
			
			}*/
	    var getMenu = function(){
			$( "div.menu" ).load( "/autoconnectMenu" );
		}
            $(document).ready(function() {
				$("getPosition").on("click", centerMapCurrentPosition);
				getMenu();
                initMap();
                centerMapCurrentPosition();
				 });
        </script>
		<title>Removing Markers</title>
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      .header {
		  background-color: #f1f1f1;
		  padding: 30px;
		  text-align: center;
		  height: 50px;
	      min-width: 120px;
		}
	  #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #floating-panel {
        position: absolute;
        top: 121px;
        left: 25%;
        z-index: 5;
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
        text-align: center;
        font-family: 'Roboto','sans-serif';
        line-height: 30px;
        padding-left: 10px;
      }
    </style>
    </head>
    <body>
	   <div class="header">
	   <table style="width:100%">
	     <tr>
            <td><div><h1>GPS monitor</h1></div></td>
			<td><div style="display:inline-block; float:right"><div class="menu"></div></div></td>
        </tr>
	   </table>
	  </div>
        <div id="floating-panel">
		    <label for="Date">Choose The Date:</label>
            <input type="date" id="Date" name="Date">
            <button class="getPosition">Search!</button>
			<label for="time">select minimum time stayed:</label>
            <input type="number" id="time" name="time" min="1" max="60">
			</div>
		    <div id="map"></div>

        
    </body>
</html>
